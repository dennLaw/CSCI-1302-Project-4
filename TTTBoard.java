import javax.swing.ImageIcon;
import javax.swing.JButton;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author KLZ de Panama
 */
public class TTTBoard extends javax.swing.JFrame {

    /**
     * Creates new form TTTBoard
     */
	
	String projPath = System.getProperty("user.dir");
    boolean player1Turn;
    boolean player2Turn;
    boolean player1Win;
    boolean player2Win;
    boolean ai;
    int buttonsClicked;
    int scoreP1;
    int scoreP2;
    int firstMove;
    TicTacToe ttt;
    TicTacToeAI sam;
    ImageIcon R1C1;
    ImageIcon R1C2;
    ImageIcon R1C3;
    ImageIcon R2C1;
    ImageIcon R2C2;
    ImageIcon R2C3;
    ImageIcon R3C1;
    ImageIcon R3C2;
    ImageIcon R3C3;
    ImageIcon BR1C1;
    ImageIcon BR1C2;
    ImageIcon BR1C3;
    ImageIcon BR2C1;
    ImageIcon BR2C2;
    ImageIcon BR2C3;
    ImageIcon BR3C1;
    ImageIcon BR3C2;
    ImageIcon BR3C3;
	
    public TTTBoard() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        playAgain = new javax.swing.JButton();
        undoButton = new javax.swing.JButton();
        Row1Col1 = new javax.swing.JButton();
        Row1Col2 = new javax.swing.JButton();
        Row1Col3 = new javax.swing.JButton();
        Row2Col1 = new javax.swing.JButton();
        Row2Col2 = new javax.swing.JButton();
        Row2Col3 = new javax.swing.JButton();
        Row3Col1 = new javax.swing.JButton();
        Row3Col2 = new javax.swing.JButton();
        Row3Col3 = new javax.swing.JButton();
        p2ScorePane = new javax.swing.JTextField();
        p1ScorePane = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        background = new javax.swing.JLabel();
        

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        playAgain.setText("Start Next Round!");
        playAgain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playAgainActionPerformed(evt);
            }
        });
        getContentPane().add(playAgain);
        playAgain.setBounds(350, 270, 230, 90);

        undoButton.setForeground(new java.awt.Color(255, 51, 0));
        undoButton.setText("Undo");
        undoButton.setOpaque(false);
        undoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undoButtonActionPerformed(evt);
            }
        });
        getContentPane().add(undoButton);
        undoButton.setBounds(410, 30, 70, 45);

        Row1Col1.setBackground(new java.awt.Color(65, 65, 65));
        Row1Col1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Row1Col1ActionPerformed(evt);
            }
        });
        getContentPane().add(Row1Col1);
        Row1Col1.setBounds(233, 94, 140, 140);

        Row1Col2.setBackground(new java.awt.Color(65, 65, 65));
        Row1Col2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Row1Col2ActionPerformed(evt);
            }
        });
        getContentPane().add(Row1Col2);
        Row1Col2.setBounds(382, 94, 140, 140);

        Row1Col3.setBackground(new java.awt.Color(65, 65, 65));
        Row1Col3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Row1Col3ActionPerformed(evt);
            }
        });
        getContentPane().add(Row1Col3);
        Row1Col3.setBounds(532, 94, 140, 140);

        Row2Col1.setBackground(new java.awt.Color(65, 65, 65));
        Row2Col1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Row2Col1ActionPerformed(evt);
            }
        });
        getContentPane().add(Row2Col1);
        Row2Col1.setBounds(233, 244, 140, 140);

        Row2Col2.setBackground(new java.awt.Color(65, 65, 65));
        Row2Col2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Row2Col2ActionPerformed(evt);
            }
        });
        getContentPane().add(Row2Col2);
        Row2Col2.setBounds(382, 244, 140, 140);

        Row2Col3.setBackground(new java.awt.Color(65, 65, 65));
        Row2Col3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Row2Col3ActionPerformed(evt);
            }
        });
        getContentPane().add(Row2Col3);
        Row2Col3.setBounds(532, 244, 140, 140);

        Row3Col1.setBackground(new java.awt.Color(65, 65, 65));
        Row3Col1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Row3Col1ActionPerformed(evt);
            }
        });
        getContentPane().add(Row3Col1);
        Row3Col1.setBounds(233, 394, 140, 140);

        Row3Col2.setBackground(new java.awt.Color(65, 65, 65));
        Row3Col2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Row3Col2ActionPerformed(evt);
            }
        });
        getContentPane().add(Row3Col2);
        Row3Col2.setBounds(382, 394, 140, 140);

        Row3Col3.setBackground(new java.awt.Color(65, 65, 65));
        Row3Col3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Row3Col3ActionPerformed(evt);
            }
        });
        getContentPane().add(Row3Col3);
        Row3Col3.setBounds(532, 394, 140, 140);

        p2ScorePane.setEditable(false);
        p2ScorePane.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        p2ScorePane.setForeground(new java.awt.Color(255, 0, 0));
        p2ScorePane.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        p2ScorePane.setOpaque(false);
        getContentPane().add(p2ScorePane);
        p2ScorePane.setBounds(720, 60, 150, 60);

        p1ScorePane.setEditable(false);
        p1ScorePane.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        p1ScorePane.setForeground(new java.awt.Color(102, 102, 255));
        p1ScorePane.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        p1ScorePane.setOpaque(false);
        getContentPane().add(p1ScorePane);
        p1ScorePane.setBounds(30, 60, 150, 60);

        textArea.setEditable(false);
        textArea.setBackground(new java.awt.Color(65, 65, 65));
        textArea.setColumns(20);
        textArea.setForeground(new java.awt.Color(204, 204, 204));
        textArea.setRows(5);
        jScrollPane2.setViewportView(textArea);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(120, 600, 670, 150);

        background.setIcon(new javax.swing.ImageIcon(projPath + "\\art\\tttBackground.png"));
        getContentPane().add(background);
        background.setBounds(0, 0, 900, 800);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    public boolean checkClicked(boolean clickedButton){
    	return clickedButton;
    }
    
    
    public boolean checkTurnP1(){
    	return player1Turn;
    }
    
    
    public boolean checkTurnP2(){
    	return player2Turn;
    }
    
    
    public void setTurnP2(){
    		player1Turn = false;
    		player2Turn = true;
    		textArea.setText("Your turn, Player 2.");
    }
    	
    
    public void setTurnP1(){
    		player2Turn = false;
    		player1Turn = true;
    		textArea.setText("Your turn, Player 1.");
    	}
    
    public int checkClicked(){
    	
    	return buttonsClicked;
    }
    
    
    public void checkIfFull(){
    	
    	int buttonsChecked = checkClicked();
    	boolean won = ttt.gameFinished();
    	
    	if(buttonsChecked > 8 && won == false){
    		textArea.setText("No clear winner here. Click the button to play a new round.");
    		undoButton.setVisible(false);
    		playAgain.setVisible(true);
    	}
    	
    }
    
    public void resetButtons(){
    	
    	Row1Col1.setIcon(null);
    	Row1Col2.setIcon(null);
    	Row1Col3.setIcon(null);
    	Row2Col1.setIcon(null);
    	Row2Col2.setIcon(null);
    	Row2Col3.setIcon(null);
    	Row3Col1.setIcon(null);
    	Row3Col2.setIcon(null);
    	Row3Col3.setIcon(null);
    	undoButton.setVisible(false);
    	
    }
    
    
    public void resetIcons(){
    	
    	R1C1 = null;
    	R1C2 = null;
    	R1C3 = null;
    	R2C1 = null;
    	R2C2 = null;
    	R2C3 = null;
    	R3C1 = null;
    	R3C2 = null;
    	R3C3 = null;
    	BR1C1 = null;
    	BR1C2 = null;
    	BR1C3 = null;
    	BR2C1 = null;
    	BR2C2 = null;
    	BR2C3 = null;
    	BR3C1 = null;
    	BR3C2 = null;
    	BR3C3 = null;
    	
    }
    
    
    public void makeBackUp(){
    
    	BR1C1 = R1C1;
    	BR1C2 = R1C2;
    	BR1C3 = R1C3;
    	BR2C1 = R2C1;
    	BR2C2 = R2C2;
    	BR2C3 = R2C3;
    	BR3C1 = R3C1;
    	BR3C2 = R3C2;
    	BR3C3 = R3C3;
    	   	
    }
    
    
    public void resetBoard(){
    	
        resetButtons();
        resetIcons();
        showAll();
        playAgain.setVisible(false);
        firstMove = 0;
        
        if (player1Win){
        	player1Turn = false;
        	player2Turn = true;
        	textArea.setText("Make the first move, Player 2.");
        }
        
        else if (player2Win){
        	player1Turn = true;
        	player2Turn = false;
        	textArea.setText("Make the first move, Player 1.");
        }
        
        else
        	textArea.setText("Make the first move, Player 1.");
        
        player1Win = false;
        player2Win = false;
        
        buttonsClicked = 0;
        ttt = new TicTacToe();
    	
    }
    
    public void pushToAI(){
    	
    	sam.makeChoice(ttt.returnBoard());
    	int x = sam.returnXChoice();
    	int y = sam.returnYChoice();
    	int player = ttt.play(x, y);
    	
    	//if(player == 1){
	    	if (x == 0 && y == 0){
	    		setPiece(Row1Col1, x, y);
	    	}
	    	
	    	else if (x == 0 && y == 1){
	    		setPiece(Row1Col2, x, y);
	    	}
	    	
	    	else if (x == 0 && y == 2){
	    		setPiece(Row1Col3, x, y);
	    	}
	    	
	    	else if (x == 1 && y == 0){
	    		setPiece(Row2Col1, x, y);
	    	}
	    	
	    	else if (x == 1 && y == 1){
	    		setPiece(Row2Col2, x, y);
	    	}
	    	
	    	else if (x == 1 && y == 2){
	    		setPiece(Row2Col3, x, y);
	    	}
	    	
	    	else if (x == 2 && y == 0){
	    		setPiece(Row3Col1, x, y);
	    	}
	    	
	    	else if (x == 2 && y == 1){
	    		setPiece(Row3Col2, x, y);
	    	}
	    	
	    	else if (x == 2 && y == 2){
	    		setPiece(Row3Col3, x, y);
	    	}
	    	
	    	setTurnP1();
	    //	}
    	//else{
    	//	pushToAI();
    	//}
    	
    }
    
    public void hideAll(){
    	
    	Row1Col1.setVisible(false);
    	Row1Col2.setVisible(false);
    	Row1Col3.setVisible(false);
    	Row2Col1.setVisible(false);
    	Row2Col2.setVisible(false);
    	Row2Col3.setVisible(false);
    	Row3Col1.setVisible(false);
    	Row3Col2.setVisible(false);
    	Row3Col3.setVisible(false);
    }
    
    public void showAll(){
    	
    	Row1Col1.setVisible(true);
    	Row1Col2.setVisible(true);
    	Row1Col3.setVisible(true);
    	Row2Col1.setVisible(true);
    	Row2Col2.setVisible(true);
    	Row2Col3.setVisible(true);
    	Row3Col1.setVisible(true);
    	Row3Col2.setVisible(true);
    	Row3Col3.setVisible(true);
    	
    }
    
    public void seeWhoWin(){
    	
    	boolean won = ttt.gameFinished();
    	
    	if (won == true){
    		
    		undoButton.setVisible(false);
    		if (checkTurnP1() == false) {
    			textArea.setText("Congratulations Player 1! You've won! Click the button to play again.");
    			scoreP1++;
    			setScoreP1(scoreP1);
    			hideAll();
    			playAgain.setVisible(true);
    			player1Win = true;
    		}
    		
    		else if (checkTurnP2() == false) {
    			textArea.setText("Congratulations Player 2! You've won! Click the button to play again.");
    			scoreP2++;
    			setScoreP2(scoreP2);
    			hideAll();
    			playAgain.setVisible(true);
    			player2Win = true;
    		}
    	}
    	
    	else
    		checkIfFull();
    	
    }
    
    public void setIconPic(JButton button, String piece, int x, int y){
		
    	if (x == 0 && y == 0){
    		if (piece.equals("O")){
    			R1C1 = new ImageIcon(projPath + "\\art\\oPiece.png");
    			button.setIcon(R1C1);
    		}
    		
    		else if(piece.equals("X")){
    			R1C1 = new ImageIcon(projPath + "\\art\\xPiece.png");
    			button.setIcon(R1C1);
    		}
    	}
    	
    	else if (x == 0 && y == 1){
    		if (piece.equals("O")){
    			R1C2 = new ImageIcon(projPath + "\\art\\oPiece.png");
    			button.setIcon(R1C2);
    		}
    		
    		else if(piece.equals("X")){
    			R1C2 = new ImageIcon(projPath + "\\art\\xPiece.png");
    			button.setIcon(R1C2);
    		}
    	}
    	
    	else if (x == 0 && y == 2){
    		if (piece.equals("O")){
    			R1C3 = new ImageIcon(projPath + "\\art\\oPiece.png");
    			button.setIcon(R1C3);
    		}
    		
    		else if(piece.equals("X")){
    			R1C3 = new ImageIcon(projPath + "\\art\\xPiece.png");
    			button.setIcon(R1C3);
    		}
    	}
    	
    	else if (x == 1 && y == 0){
    		if (piece.equals("O")){
    			R2C1 = new ImageIcon(projPath + "\\art\\oPiece.png");
    			button.setIcon(R2C1);
    		}
    		
    		else if(piece.equals("X")){
    			R2C1 = new ImageIcon(projPath + "\\art\\xPiece.png");
    			button.setIcon(R2C1);
    		}
    	}
    	
    	else if (x == 1 && y == 1){
    		if (piece.equals("O")){
    			R2C2 = new ImageIcon(projPath + "\\art\\oPiece.png");
    			button.setIcon(R2C2);
    		}
    		
    		else if(piece.equals("X")){
    			R2C2 = new ImageIcon(projPath + "\\art\\xPiece.png");
    			button.setIcon(R2C2);
    		}
    	}
    	
    	else if (x == 1 && y == 2){
    		if (piece.equals("O")){
    			R2C3 = new ImageIcon(projPath + "\\art\\oPiece.png");
    			button.setIcon(R2C3);
    		}
    		
    		else if(piece.equals("X")){
    			R2C3 = new ImageIcon(projPath + "\\art\\xPiece.png");
    			button.setIcon(R2C3);
    		}
    	}
    	
    	else if (x == 2 && y == 0){
    		if (piece.equals("O")){
    			R3C1 = new ImageIcon(projPath + "\\art\\oPiece.png");
    			button.setIcon(R3C1);
    		}
    		
    		else if(piece.equals("X")){
    			R3C1 = new ImageIcon(projPath + "\\art\\xPiece.png");
    			button.setIcon(R3C1);
    		}
    	}
    	
    	else if (x == 2 && y == 1){
    		if (piece.equals("O")){
    			R3C2 = new ImageIcon(projPath + "\\art\\oPiece.png");
    			button.setIcon(R3C2);
    		}
    		
    		else if(piece.equals("X")){
    			R3C2 = new ImageIcon(projPath + "\\art\\xPiece.png");
    			button.setIcon(R3C2);
    		}
    	}
    	
    	else if (x == 2 && y == 2){
    		if (piece.equals("O")){
    			R3C3 = new ImageIcon(projPath + "\\art\\oPiece.png");
    			button.setIcon(R3C3);
    		}
    		
    		else if(piece.equals("X")){
    			R3C3 = new ImageIcon(projPath + "\\art\\xPiece.png");
    			button.setIcon(R3C3);
    		}
    	}
    }
    
    
    public void setPiece(JButton button, int x, int y){
    	
    	String clicked = String.valueOf(button.getIcon());
    	
    	if (firstMove == 0){
    		firstMove++;
    		undoButton.setVisible(true);
    	}
    	
    	if (clicked == "null"){
    		
    		if (checkTurnP1()){
    			setIconPic(button, "O", x, y);
    			setTurnP2();
        	}
        
        	else if (checkTurnP2()){
    			setIconPic(button, "X", x, y);
    			setTurnP1();
        	}
    		
    		ttt.play(x, y);
    		buttonsClicked++;
    		seeWhoWin();
    		
    	}
    }
   
    public void undoBoard(){
    	
    	undoButton.setVisible(false);
    	ttt.undo();
    	firstMove = 0;
    	buttonsClicked--;
    	R1C1 = BR1C1;
    	R1C2 = BR1C2;
    	R1C3 = BR1C3;
    	R2C1 = BR2C1;
    	R2C2 = BR2C2;
    	R2C3 = BR2C3;
    	R3C1 = BR3C1;
    	R3C2 = BR3C2;
    	R3C3 = BR3C3;
    	
    	Row1Col1.setIcon(R1C1);  
    	Row1Col2.setIcon(R1C2);
    	Row1Col3.setIcon(R1C3);
    	Row2Col1.setIcon(R2C1);
    	Row2Col2.setIcon(R2C2);
    	Row2Col3.setIcon(R2C3);
    	Row3Col1.setIcon(R3C1);
    	Row3Col2.setIcon(R3C2);
    	Row3Col3.setIcon(R3C3);
    	
    	if(checkTurnP1()){
    		setTurnP2();
    	}
    	
    	else if (checkTurnP2()){
    		setTurnP1();
    	}
    	
    }
    
    
    private void Row1Col1ActionPerformed(java.awt.event.ActionEvent evt) {                                         

			makeBackUp();
    		setPiece(Row1Col1, 0, 0);
       		if (ai == true){
       			pushToAI();
       		}
    		
    	}
    	
          
    

    private void Row1Col2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Row1Col2ActionPerformed
 
   		makeBackUp();
   		setPiece(Row1Col2, 0, 1);
   		if (ai == true){
   			pushToAI();
   		}
    	
    }//GEN-LAST:event_Row1Col2ActionPerformed

    private void Row1Col3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Row1Col3ActionPerformed

    	makeBackUp();
   		setPiece(Row1Col3, 0, 2);
   		if (ai == true){
   			pushToAI();
   		}
    	
    }//GEN-LAST:event_Row1Col3ActionPerformed

    private void Row2Col1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Row2Col1ActionPerformed

    	makeBackUp();
   		setPiece(Row2Col1, 1, 0);
   		if (ai == true){
   			pushToAI();
   		}
   		
    }//GEN-LAST:event_Row2Col1ActionPerformed

    private void Row2Col2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Row2Col2ActionPerformed
    	
    	makeBackUp();
   		setPiece(Row2Col2, 1, 1);
   		if (ai == true){
   			pushToAI();
   		}
   		
    }//GEN-LAST:event_Row2Col2ActionPerformed

    private void Row2Col3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Row2Col3ActionPerformed

    	makeBackUp();
   		setPiece(Row2Col3, 1, 2);
   		if (ai == true){
   			pushToAI();
   		}
   		
    }//GEN-LAST:event_Row2Col3ActionPerformed

    private void Row3Col1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Row3Col1ActionPerformed

    	makeBackUp();
   		setPiece(Row3Col1, 2, 0);
   		if (ai == true){
   			pushToAI();
   		}
   		
    }//GEN-LAST:event_Row3Col1ActionPerformed

    private void Row3Col2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Row3Col2ActionPerformed
    	
    	makeBackUp();
   		setPiece(Row3Col2, 2, 1);
   		
    }//GEN-LAST:event_Row3Col2ActionPerformed

    private void Row3Col3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Row3Col3ActionPerformed
    	
    	makeBackUp();
   		setPiece(Row3Col3, 2, 2);
   		if (ai == true){
   			pushToAI();
   		}
    	
    }//GEN-LAST:event_Row3Col3ActionPerformed

    private void playAgainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playAgainActionPerformed

    	resetBoard();
    	
    }//GEN-LAST:event_playAgainActionPerformed

    private void undoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undoButtonActionPerformed
        
    	undoBoard();
    	
    }//GEN-LAST:event_undoButtonActionPerformed

    
    
    public void makeFrame(String opponent, int difficulty){
    
        player1Turn = true;
        player2Turn = false;
        ai = false;
        playAgain.setVisible(false);
        undoButton.setVisible(false);
        buttonsClicked = 0;
        ttt = new TicTacToe();
        scoreP1 = 0;
        scoreP2 = 0;
        firstMove = 0;
        resetIcons();
        
        if (opponent.equalsIgnoreCase("Computer")){
        	ai = true;
        	sam = new TicTacToeAI(difficulty);
        }
        
        showAll();
        setSize(900, 800);
        setScoreP1(0);
        setScoreP2(0);
        setVisible(true);
		textArea.setText("Welcome to Tic-Tac-Toe! Make the first move, Player 1.");
    
    }
    
    
    public void makeFrame(){
        
    player1Turn = true;
    player2Turn = false;
    ai = false;
    playAgain.setVisible(false);
    undoButton.setVisible(false);
    buttonsClicked = 0;
    ttt = new TicTacToe();
    scoreP1 = 0;
    scoreP2 = 0;
    firstMove = 0;
    resetIcons();
    
    showAll();
    setSize(900, 800);
    setScoreP1(0);
    setScoreP2(0);
    setVisible(true);
	textArea.setText("Welcome to Tic-Tac-Toe! Make the first move, Player 1.");

}
    
    
    public void setScoreP1(int Score){
    	String score = String.valueOf(Score);
    	p1ScorePane.setText(score);
    }
    
    
    public void setScoreP2(int Score){
    	String score = String.valueOf(Score);
    	p2ScorePane.setText(score);
    }
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Row1Col1;
    private javax.swing.JButton Row1Col2;
    private javax.swing.JButton Row1Col3;
    private javax.swing.JButton Row2Col1;
    private javax.swing.JButton Row2Col2;
    private javax.swing.JButton Row2Col3;
    private javax.swing.JButton Row3Col1;
    private javax.swing.JButton Row3Col2;
    private javax.swing.JButton Row3Col3;
    private javax.swing.JLabel background;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField p1ScorePane;
    private javax.swing.JTextField p2ScorePane;
    private javax.swing.JButton playAgain;
    private javax.swing.JTextArea textArea;
    private javax.swing.JButton undoButton;
    // End of variables declaration//GEN-END:variables
}
